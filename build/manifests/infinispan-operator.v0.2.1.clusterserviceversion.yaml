apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\"\
      : \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\
      \n    },\n    \"spec\": {\n      \"size\": 1\n    }\n  }\n]\n"
    capabilities: Basic Install
    categories: Database
    certified: 'false'
    containerImage: docker.io/jboss/infinispan-operator:0.2.1
    createdAt: 2019-04-02 10:15:00
    description: Operator that creates and manages Infinispan clusters.
    repository: https://github.com/infinispan/infinispan-operator
    support: Infinispan
    tectonic-visibility: ocs
  name: datagrid-operator.v1.0.0
  namespace: placeholder
spec:
  customresourcedefinitions:
    owned:
    - description: An Infinispan cluster instance.
      displayName: Infinispan
      kind: Infinispan
      name: infinispans.infinispan.org
      resources:
      - kind: Service
        version: v1
      - kind: Pod
        version: v1
      specDescriptors:
      - description: Sets the number of nodes in the cluster.
        displayName: Size
        path: size
      - description: Sets an image to bootstrap the Infinispan server.
        displayName: Image
        path: image
      version: v1
  description: 'Infinispan is a distributed, in-memory data store that increases application
    performance and delivers open-source capabilites to handle demanding use cases.


    The Infinispan Operator provides operational intelligence to simplify deploying
    Infinispan on Kubernetes clusters.


    ### Core Capabilities

    * **Schemaless data structure:** Store different objects as key-value pairs.

    * **Grid-based data storage:** Distribute and replicate data across clusters.

    * **Elastic scaling:** Dynamically adjust the number of nodes to meet demand without
    service disruption.

    * **Data interoperability:** Store, retrieve, and query data in the grid from
    different endpoints.

    * **High availability:** Always have access to data.


    ### Infinispan Operator Features

    * HTTP endpoint at `8080`.

    * HotRod endpoint at `11222`.

    * Supports custom configuration for different use cases.


    Default credentials are temporarily `infinispan/infinispan`. You will soon be
    able to configure the credentials for Infinispan.


    Each Infinispan pod requests `0.5` cpu and 512MiB of memory.

    '
  displayName: infinispan
  icon:
  - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA2NzUgMjI0Ij48ZGVmcz48c3R5bGU+LmF7ZmlsbDojZTAwO308L3N0eWxlPjwvZGVmcz48dGl0bGU+TG9nby1SZWRfSGF0LURhdGFfR3JpZC1BLVN0YW5kYXJkLVJHQjwvdGl0bGU+PHBhdGggZD0iTTIyOC42NSwxNDYuNzRoMjUuNjljMjIuMjYsMCwzOC4zOCwxNS44LDM4LjM4LDM2LjUsMCwyMC40OS0xNiwzNi4zLTM4LjM4LDM2LjNIMjI4LjY1Wm0xMC45Miw5Ljc3djUzLjI1aDE1YzE1LjI5LDAsMjYuOTQtMTEuNTQsMjYuOTQtMjYuNTJzLTExLjY1LTI2LjczLTI2Ljk0LTI2LjczWiIvPjxwYXRoIGQ9Ik0yOTkuMzcsMjA0LjM1YzAtMTAuNiw5LjA1LTE2LjEyLDIxLjQzLTE2LjEyYTM2LjQxLDM2LjQxLDAsMCwxLDE0LjQ1LDIuOTJ2LTUuNjJjMC03LjQ5LTQuNDctMTEuMjMtMTIuODktMTEuMjMtNS4xLDAtMTAuMywxLjU2LTE2LjQ0LDQuNDdsLTMuODQtNy44YzcuNDgtMy41NCwxNC4zNS01LjQxLDIxLjczLTUuNDEsMTMuNjMsMCwyMS42NCw2LjY2LDIxLjY0LDE4LjkzdjM1aC0xMC4yVjIxNWMtNC41NywzLjc1LTEwLDUuNTEtMTYuNDMsNS41MUMzMDcuMjgsMjIwLjQ3LDI5OS4zNywyMTMuODIsMjk5LjM3LDIwNC4zNVptMjEuODQsOC40M2EyMC4zOCwyMC4zOCwwLDAsMCwxNC01di05LjI2YTI3LjczLDI3LjczLDAsMCwwLTEzLjYyLTMuMTJjLTcuMjgsMC0xMi4yNywzLjIyLTEyLjI3LDguNzRDMzA5LjM2LDIwOS4zNSwzMTQuMjUsMjEyLjc4LDMyMS4yMSwyMTIuNzhaIi8+PHBhdGggZD0iTTM2Mi4yOSwxNzUuMzRIMzUxLjA2VjE2Ni42aDExLjIzVjE1My4wOGwxMC4zLTIuNXYxNmgxNS42djguNzRoLTE1LjZWMjA0YzAsNS40MSwyLjE4LDcuMzksNy44LDcuMzlhMjAuMTgsMjAuMTgsMCwwLDAsNy41OS0xLjI1djguNzRhMzUuOCwzNS44LDAsMCwxLTkuODgsMS41NWMtMTAuMjksMC0xNS44MS00Ljg4LTE1LjgxLTE0WiIvPjxwYXRoIGQ9Ik0zOTMuMTgsMjA0LjM1YzAtMTAuNiw5LjA1LTE2LjEyLDIxLjQzLTE2LjEyYTM2LjQ5LDM2LjQ5LDAsMCwxLDE0LjQ1LDIuOTJ2LTUuNjJjMC03LjQ5LTQuNDctMTEuMjMtMTIuODktMTEuMjMtNS4xLDAtMTAuMywxLjU2LTE2LjQ0LDQuNDdsLTMuODUtNy44YzcuNDktMy41NCwxNC4zNi01LjQxLDIxLjc0LTUuNDEsMTMuNjMsMCwyMS42Myw2LjY2LDIxLjYzLDE4LjkzdjM1SDQyOS4wNlYyMTVjLTQuNTcsMy43NS0xMCw1LjUxLTE2LjQzLDUuNTFDNDAxLjA4LDIyMC40NywzOTMuMTgsMjEzLjgyLDM5My4xOCwyMDQuMzVaTTQxNSwyMTIuNzhhMjAuMzgsMjAuMzgsMCwwLDAsMTQtNXYtOS4yNmEyNy43NSwyNy43NSwwLDAsMC0xMy42Mi0zLjEyYy03LjI4LDAtMTIuMjgsMy4yMi0xMi4yOCw4Ljc0QzQwMy4xNiwyMDkuMzUsNDA4LjA1LDIxMi43OCw0MTUsMjEyLjc4WiIvPjxwYXRoIGQ9Ik01MDkuMTQsMjIwLjY4Yy0yMS4zMiwwLTM4LTE2LjY0LTM4LTM3LjU0czE2LjU0LTM3LjU1LDM3Ljg2LTM3LjU1YzExLjQ0LDAsMjIuMjUsNC41OCwyOS4zMywxMi41OWwtNy40OSw3LjI4QTI4Ljg2LDI4Ljg2LDAsMCwwLDUwOSwxNTUuNjhjLTE1LjI5LDAtMjYuNzMsMTItMjYuNzMsMjcuNDZTNDk0LDIxMC43LDUwOS4yNCwyMTAuN2MxMywwLDIyLjg4LTguODQsMjQuMzQtMjAuOEg1MDkuMzV2LTkuNTdINTQ1djMuNzRDNTQ1LDIwNC44Nyw1MjkuNjMsMjIwLjY4LDUwOS4xNCwyMjAuNjhaIi8+PHBhdGggZD0iTTU1NS4xMSwxNjYuNmgxMC40djYuNTVBMTcsMTcsMCwwLDEsNTgwLDE2NS40NmExNS4wOSwxNS4wOSwwLDAsMSw1LjQxLjgzdjkuMzZhMTguNjEsMTguNjEsMCwwLDAtNi4yNC0xLjE1Yy01LjUxLDAtMTAuNzEsMi43MS0xMy42Miw5LjU3djM1LjQ3aC0xMC40WiIvPjxwYXRoIGQ9Ik01OTIuNTUsMTUxLjYyYTYuNDcsNi40NywwLDAsMSw2LjQ0LTYuNDQsNi40NSw2LjQ1LDAsMCwxLDAsMTIuODlBNi40OCw2LjQ4LDAsMCwxLDU5Mi41NSwxNTEuNjJabTExLjY0LDY3LjkyaC0xMC40VjE2Ni42aDEwLjRaIi8+PHBhdGggZD0iTTY1Ni45MiwyMTQuNTVhMjUsMjUsMCwwLDEtMTYuMjIsNS44MkM2MjUuNjIsMjIwLjM3LDYxNCwyMDguMiw2MTQsMTkzczExLjY1LTI3LjI1LDI2Ljk0LTI3LjI1YTI2LjUsMjYuNSwwLDAsMSwxNS45MSw1LjJWMTQ2Ljc0bDEwLjQtMi4yOXY3NS4wOWgtMTAuM1ptLTE0Ljc3LTMuMjNBMTksMTksMCwwLDAsNjU2LjgyLDIwNVYxODFhMTkuOCwxOS44LDAsMCwwLTE0LjY3LTYuMjRjLTEwLjI5LDAtMTgsNy45MS0xOCwxOC4yQzYyNC4xNiwyMDMuNDIsNjMyLjA3LDIxMS4zMiw2NDIuMTUsMjExLjMyWiIvPjxwYXRoIGNsYXNzPSJhIiBkPSJNMTI5LDg1YzEyLjUxLDAsMzAuNjEtMi41OCwzMC42MS0xNy40NmExNCwxNCwwLDAsMC0uMzEtMy40MmwtNy40NS0zMi4zNmMtMS43Mi03LjEyLTMuMjMtMTAuMzUtMTUuNzMtMTYuNkMxMjYuMzksMTAuMTksMTA1LjI2LDIsOTksMmMtNS44MiwwLTcuNTUsNy41NC0xNC40NSw3LjU0LTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0NCw0NS41NEM0NCw1NC43Niw4MC4zMyw4NSwxMjksODVtMzIuNTUtMTEuNDJjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDODAsMTA1LjQ3LDM5LjA4LDc4LjEsMzkuMDgsNjBhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIzLjc3LDUzLjUyLDIsNTYuNTQsMiw3NS43MiwyLDEwNy4yLDc2LjU5LDE0NiwxMzUuNjUsMTQ2YzQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48cGF0aCBkPSJNMTYxLjUyLDczLjU3YzEuNzMsOC4xOSwxLjczLDkuMDUsMS43MywxMC4xMywwLDE0LTE1Ljc0LDIxLjc3LTM2LjQzLDIxLjc3QzgwLDEwNS40NywzOS4wOCw3OC4xLDM5LjA4LDYwYTE4LjQ1LDE4LjQ1LDAsMCwxLDEuNTEtNy4zM2wzLjY2LTkuMDZBNi40Myw2LjQzLDAsMCwwLDQ0LDQ1LjU0QzQ0LDU0Ljc2LDgwLjMzLDg1LDEyOSw4NWMxMi41MSwwLDMwLjYxLTIuNTgsMzAuNjEtMTcuNDZhMTQsMTQsMCwwLDAtLjMxLTMuNDJaIi8+PHBhdGggZD0iTTU4MS4yNCw5NC4zYzAsMTEuODksNy4xNSwxNy42NywyMC4xOSwxNy42N2E1Mi4xMSw1Mi4xMSwwLDAsMCwxMS44OS0xLjY4Vjk2LjUxYTI0Ljg0LDI0Ljg0LDAsMCwxLTcuNjgsMS4xNmMtNS4zNywwLTcuMzYtMS42OC03LjM2LTYuNzNWNjkuOGgxNS41NlY1NS42SDU5OC4yOHYtMThsLTE3LDMuNjhWNTUuNkg1NzBWNjkuOGgxMS4yNVptLTUzLC4zMmMwLTMuNjgsMy42OS01LjQ3LDkuMjYtNS40N2E0My4xMiw0My4xMiwwLDAsMSwxMC4xLDEuMjZ2Ny4xNUEyMS41MSwyMS41MSwwLDAsMSw1MzcsMTAwLjE5Yy01LjQ2LDAtOC43My0yLjEtOC43My01LjU3bTUuMiwxNy41NmM2LDAsMTAuODQtMS4yNiwxNS4zNi00LjMxdjMuMzdoMTYuODJWNzUuNThjMC0xMy41Ni05LjE0LTIxLTI0LjM5LTIxLTguNTIsMC0xNi45NCwyLTI2LDYuMWw2LjEsMTIuNTJjNi41Mi0yLjc0LDEyLTQuNDIsMTYuODMtNC40Miw3LDAsMTAuNjIsMi43MywxMC42Miw4LjMxdjIuNzNhNDkuNTMsNDkuNTMsMCwwLDAtMTIuNjItMS41OGMtMTQuMzEsMC0yMi45Myw2LTIyLjkzLDE2LjczLDAsOS43OCw3Ljc4LDE3LjI0LDIwLjE5LDE3LjI0bS05Mi40NC0uOTRoMTguMDlWODIuNDJoMzAuMjl2MjguODJoMTguMDlWMzcuNjJINDg5LjQzVjY1LjkxSDQ1OS4xNFYzNy42Mkg0NDEuMDVaTTM3Mi4xMiw4My4zN2MwLTgsNi4zMS0xNC4xLDE0LjYyLTE0LjFhMTcuMjIsMTcuMjIsMCwwLDEsMTEuNzgsNC4zMlY5M2ExNi4zNiwxNi4zNiwwLDAsMS0xMS43OCw0LjQyYy04LjIsMC0xNC42Mi02LjEtMTQuNjItMTQuMDltMjYuNjEsMjcuODdoMTYuODNWMzMuOTRsLTE3LDMuNjhWNTguNTVhMjguMywyOC4zLDAsMCwwLTE0LjItMy42OGMtMTYuMTksMC0yOC45MiwxMi41MS0yOC45MiwyOC41QTI4LjI1LDI4LjI1LDAsMCwwLDM4My44LDExMmEyNS4xMiwyNS4xMiwwLDAsMCwxNC45My00LjgzWm0tNzcuMTktNDIuN2M1LjM2LDAsOS44OCwzLjQ3LDExLjY3LDguODNIMzEwYzEuNjgtNS41Nyw1Ljg5LTguODMsMTEuNTctOC44M00yOTIuODMsODMuNDdjMCwxNi4yLDEzLjI1LDI4LjgyLDMwLjI4LDI4LjgyLDkuMzYsMCwxNi4yLTIuNTMsMjMuMjUtOC40MmwtMTEuMjYtMTBjLTIuNjMsMi43NC02LjUyLDQuMjEtMTEuMTQsNC4yMWExNC4zOSwxNC4zOSwwLDAsMS0xMy42OC04LjgzaDM5LjY1Vjg1LjA1YzAtMTcuNjctMTEuODgtMzAuMzktMjguMDgtMzAuMzlhMjguNTcsMjguNTcsMCwwLDAtMjksMjguODFNMjYzLjQ5LDUzLjA4YzYsMCw5LjM2LDMuNzgsOS4zNiw4LjMxcy0zLjM3LDguMzEtOS4zNiw4LjMxSDI0NS42MVY1My4wOFptLTM2LDU4LjE2aDE4LjA5Vjg0LjQyaDEzLjc3bDEzLjg5LDI2LjgyaDIwLjE5bC0xNi4yLTI5LjQ1YTIyLjI3LDIyLjI3LDAsMCwwLDEzLjg4LTIwLjcyYzAtMTMuMjUtMTAuNDEtMjMuNDUtMjYtMjMuNDVIMjI3LjUyWiIvPjwvc3ZnPg==
    mediatype: image/svg
  install:
    spec:
      deployments:
      - name: infinispan-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: infinispan-operator-alm-owned
          template:
            metadata:
              labels:
                name: infinispan-operator-alm-owned
              name: infinispan-operator-alm-owned
            spec:
              containers:
              - command:
                - infinispan-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: infinispan-operator
                - name: APP_USER
                  value: APPLICATION_USER
                - name: APP_PASS
                  value: APPLICATION_PASSWORD
                - name: MGMT_USER
                  value: ADMIN_USER
                - name: MGMT_PASS
                  value: ADMIN_PASSWORD
                - name: ENTRY_POINT_ARGS
                  value: '[]'
                - name: PROBES
                  value: '{"readiness": "/opt/datagrid/bin/readinessProbe.sh", "liveness":
                    "/opt/datagrid/bin/livenessProbe.sh"}'
                - name: ADDITIONAL_VARS
                  value: '["IMAGE","NUMBER_OF_INSTANCE"]'
                - name: VOLUME_MOUNTS
                  value: '[{"MountPath": "/opt/datagrid/standalone/data", "Name":
                    "srv-data"},{"MountPath": "/var/run/secrets/java.io/keystores",
                    "Name": "keystore-volume"},{"MountPath": "/var/run/secrets/openshift.io/serviceaccount",
                    "Name": "services-certs"}]'
                - name: VOLUME_REFS
                  value: '["srv-data","keystore-volume","services-certs"]'
                - name: VOLUME_CLAIMS
                  value: '[{"metadata": {"Name": "srv-data"}, "Spec":{"AccessModes":
                    ["ReadWriteOnce"], "Resources": {"Requests": {"storage": "1Gi"}}}}]'
                - name: IMAGE
                  value: registry.access.redhat.com/jboss-datagrid-7/datagrid73-openshift:latest
                - name: CLI_CMD
                  value: /opt/datagrid/bin/cli.sh
                - name: DEFAULT_IMAGE
                  value: registry.access.redhat.com/jboss-datagrid-7/datagrid73-openshift:latest
                image: jboss/infinispan-operator:0.2.1
                name: infinispan-operator
                ports:
                - containerPort: 60000
                  name: metrics
              serviceAccountName: infinispan-operator
      permissions:
      - rules:
        - apiGroups:
          - ''
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ''
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - infinispan.org
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: infinispan-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - infinispan
  - key value
  - database
  - datagrid
  - open source
  labels:
    operated-by: infinispan-operator
  links:
  - name: Blog
    url: https://blog.infinispan.org/
  - name: Documentation
    url: https://infinispan.org/
  - name: Quickstart
    url: https://github.com/infinispan/infinispan-simple-tutorials/tree/master/operator
  - name: Operator Source Code
    url: https://github.com/infinispan/infinispan-operator
  maintainers:
  - email: infinispan-dev@lists.jboss.org
    name: Infinispan Community
  maturity: alpha
  minKubeVersion: 1.11.0
  provider:
    name: Infinispan
  selector:
    matchLabels:
      operated-by: infinispan-operator
  version: 1.0.0
